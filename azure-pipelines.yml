# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger: 
  branches:
   include:
     - main
  paths:
   exclude:
     - azure-pipelines.yml
     - kube-manifests/*

variables:
  poolName: 'ubuntu-20.04'
  acrName: '<ACR NAME>'
  resourceGroup: '<ACR이 위치한 Resource Group>'

stages:
  - stage: Build
    displayName: Build Gradle
    jobs:
      - job: BuildGradle
        pool:
          vmImage: $(poolName)
        steps:
          - task: Gradle@3
            inputs:
              gradleWrapperFile: 'gradlew'
              tasks: 'build'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'
              sonarQubeRunAnalysis: false
              spotBugsAnalysis: false
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'gildong-acr-conn'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: 'az acr build -t spring-music:$(Build.BuildId) -r $(acrName) -g $(resourceGroup) .'
          - task: CopyFiles@2
            inputs:
              Contents: 'kube-manifests/**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'spring-music'